* Copyright (c) 2013 Rocket Software, Inc.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.

PROGRAM ExportHelp

   $INCLUDE INCLUDE UDO.H

   OPEN "HELP.FILE" TO HELP.FILE ELSE STOP "Error: Cannot open HELP.FILE"
   OPEN "EXPORT_FILES" TO EXPORT_FILES ELSE STOP "Error: Cannot open directory EXPORT_FILES. Please create using CREATE.FILE"

* Set UDO's output format to be compact, so that it uses less space   
   ret = UDOSetOption(UDOOPTION_OUTPUTMODE, UDO_OUTPUT_COMPACT)

* This creates the root UDO handle to hold the HELP records 
   ret = UDOCreate(UDO_OBJECT, HelpExportHandle)
   
* This creates a UDO handle to keep count on keywords
   ret = UDOCreate(UDO_OBJECT, KeywordTallyHandle)
      
   SELECT HELP.FILE
   EOL = @FALSE

* Put all HELP into a U2 Dynamic Object so we can export it as a JSON string
   LOOP
      READNEXT HelpKey ELSE EOL = @TRUE
   UNTIL EOL
      READ HelpRec FROM HELP.FILE, HelpKey ELSE CONTINUE
      
      HelpTopic = FIELD(HelpKey, '*', 1)
      HelpName = FIELD(HelpKey, '*', 2)
      
      ret = UDOCreate(UDO_OBJECT, HelpItemHandle)
      ret = UDOGetProperty(HelpExportHandle, HelpTopic, HelpTopicHandle, HelpTopicType)
      
      IF ret # UDO_SUCCESS THEN
         ret = UDOCreate(UDO_OBJECT, HelpTopicHandle)
         ret = UDOSetProperty(HelpExportHandle, HelpTopic, HelpTopicHandle)
      END
      
      ret = UDOCreate(UDO_ARRAY, KeywordsHandle)
      ret = UDOCreate(UDO_ARRAY, DescriptionHandle)
      
      ret = UDOSetProperty(HelpItemHandle, "Keywords", KeywordsHandle)
      ret = UDOSetProperty(HelpItemHandle, "Description", DescriptionHandle)
      ret = UDOSetProperty(HelpTopicHandle, HelpName, HelpItemHandle)
      
      Description = HelpRec<2>
      Keywords = HelpRec<3>
      
      DescLen = DCOUNT(Description, @VM)
      KeywordsLen = DCOUNT(Keywords, @VM)
      
      FOR DescLine = 1 TO DescLen
         ret = UDOArrayAppendItem(DescriptionHandle, Description<1, DescLine>)
      NEXT DescLine
      
      
      FOR KeywordNum = 1 TO KeywordsLen
         ret = UDOArrayAppendItem(KeywordsHandle, Keywords<1, KeywordNum>)
         ret = UDOGetProperty(KeywordTallyHandle, DOWNCASE(Keywords<1, KeywordNum>), Tally, Type)
         IF ret = UDO_SUCCESS THEN
            Tally += 1
         END ELSE
            Tally = 1
         END
         
         ret = UDOSetProperty(KeywordTallyHandle, DOWNCASE(Keywords<1, KeywordNum>), Tally)
      NEXT KeywordNum
   REPEAT
   
* Serialize all the help help in the UDO to a JSON string so we can write it to disk.
   ret = UDOWrite(KeywordTallyHandle, UDOFORMAT_JSON, outputKeywords)
   ret = UDOWrite(HelpExportHandle, UDOFORMAT_JSON, output)

* Free the memory of the root UDO handle
   ret = UDOFree(HelpExportHandle)

* Write both a raw JSON file as well as a JavaScript version
   
   WRITE outputKeywords ON EXPORT_FILES, "Keywords.json"
   WRITE "var keywordsJSON = ":output ON EXPORT_FILES, "Keywords.js"
   
   WRITE output ON EXPORT_FILES, "HELP.json"
   WRITE "var helpJSON = ":output ON EXPORT_FILES, "HELP.js"
   
END
