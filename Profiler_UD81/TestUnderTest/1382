subroutine X1382(Failure,Msg,Iterations,StartWall,EndWall,StartCpu,EndCpu)

* Copyright IBM, 17076

StartWall = 0; * In case we do not finish
StartCpu = 0;  * In case we do not finish
EndWall = 0;   * In case we do not finish
EndCpu = 0;    * In case we do not finish
equ TEST_ID to 1382

FileName = "File":TEST_ID
$include Include OSSpecific
$include IncludeFile FailureEquates
$include IncludeFile Voc_Common
$include IncludeFile Voc_Open
goto SkipInclude
$include IncludeFile Voc_Readu
$include IncludeFile Voc_Write
SkipInclude:
call CreateFile(Failure,Msg,"DATA",FileName,0,1,4,"")
if Failure # 0 then goto ErrorExit
DirectoryName = "Directory"
DirectoryPath = DirectoryName
DirectoryDepth = 2
* Successively make directories, D, D/D, D/D/D, ... DirectoryDepth
for Ndx = 1 to DirectoryDepth
	if Ndx > 1 then
		DirectoryPath := UDT.FSEP : DirectoryName
	end
	Command = MkdirCommand : DirectoryPath
	call OSExecuteCommand(Failure,Msg,Command,Output,ExitValue)
	if Failure then goto ErrorExit
next Ndx
* Move FileName to bottom directory structure
Command = MV.CMD : " " : FileName : " " :DirectoryPath
call OSExecuteCommand(Failure,Msg,Command,Output,ExitValue)
if Failure then goto ErrorExit
* Alter the VOC file pointer to the new location of FileName
VocId = FileName
gosub ReaduVoc
if Failure then goto ErrorExit
VocRecord<2> = DirectoryPath : UDT.FSEP : VocRecord<2>
gosub WriteVoc
if Failure then goto ErrorExit
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end

StartWall = system(12)
StartCpu  = system( 9)
for IterationsNdx = 1 to Iterations
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end
open FileName to fFileName else
	Failure = 1
	Msg = "Cannot OPEN ":FileName
	goto ErrorExit
end

next IterationsNdx
EndCpu  = system( 9)
EndWall = system(12)

close fFileName
call DeleteFile(Failure,Msg,"DATA",FileName)
Command = RM.CMD : " -rf " : DirectoryName
call OSExecuteCommand(Failure,Msg,Command,Output,ExitValue)
if Failure then goto ErrorExit
Command = "DELETE VOC ":FileName
call ExecuteCommand(Failure,Msg,Command,Output)
if Failure then goto ErrorExit


return
ErrorExit:
**********
Print Msg
Iterations = 0; * Cause loop control to terminate
return

end
