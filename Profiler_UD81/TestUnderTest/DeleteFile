subroutine DeleteFile(Failure,Msg,DataDict,FileName)

* Copyright IBM, 17076

******************************************************************************
*
*     Delete a file if it is a VOC F-Pointer
*
*     Module %M%    Version  %I%   Date  %H%
*
*       IBM Confidential
*       OCO Source Materials
*       Copyright (C) IBM Corp.  2001, 2004, 2006
*
*     (c) Copyright 2001, 2002, 2003, 2004, 2006 IBM Corp. - All Rights Reserved
*     This is unpublished proprietary source code of IBM Corp.
*     The copyright notice above does not evidence any actual or intended
*     publication of such source code.
*
*******************************************************************************

* You can delete a file that is an "F" type or "DIR" type VOC entry.
* Otherwise you are prompted, "Filename = "

* No failure if no VOC entry exists
* Failure if VOC entry exists but is not an F-Pointer
* Failure if DELETE.FILE fails for some reason, perhaps permissions

$include IncludeFile FailureEquates
$include IncludeFile Voc_Common
$include IncludeFile Voc_Open

* Failure = 0
* Msg = ""

begin case
case DataDict = ""
        CommandFileName = FileName
case DataDict = "DATA"
        CommandFileName = "DATA " : FileName
case DataDict = "DICT"
        CommandFileName = "DICT " : FileName
case 1
        Failure = 1
        Msg = "Unknown DATA or DICT parameter value: ":DataDict
        return
end case	

VocId = FileName
gosub ReadVoc
if Failure then return; * let caller handle failure
if Found then
	* Already in VOC file
	Type = upcase(trimf(VocRecord<1>)[1,1])
	if Type = "F" or Type = "D" then
		Cmnd = "DELETE.FILE ":CommandFileName:" FORCE"
		call ExecuteCommand(Failure,Msg,Cmnd,Output)
	end else
		Failure = 1
		Msg = VocName:",":FileName:" already exists as type ":Type:", ":VocRecord:" and cannot be DELETEd."
	end
end

return

$include IncludeFile Voc_Read
