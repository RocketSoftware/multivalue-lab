SUBROUTINE redis.sadd (result, key, value, retMsg)
$INCLUDE INCLUDE redis.internal

   retMsg = ''

   IF NOT(redis$connected) THEN result = -9 ; RETURN
   
   message = "*3":redis$msg$separator ;* Number of arguments (3 for SADD)
   message := "$4":redis$msg$separator ;* Byte length of command
   message := "SADD":redis$msg$separator ;* Redis Command
   message := "$":LEN(key):redis$msg$separator ;* Byte length of key name
   message := key:redis$msg$separator ;* Key name
   message := "$":LEN(value):redis$msg$separator ;* Byte length of value to set
   message := value:redis$msg$separator ;* value

   result = writeSocket(redis$socket, message, redis$timeout, BLOCKING$MODE, bytes)
*TODO: compare bytes with LEN(message)

   result = NOT(result)

   IF result THEN
      result = readSocket(redis$socket, message.type, 1, redis$timeout, BLOCKING$MODE, bytes)
      IF NOT(result) OR bytes = -1 THEN
         result = 0
      END

      result = readSocket(redis$socket, message, 0, redis$timeout, BLOCKING$MODE, bytes)
      *TODO: Need to actually check this later
      
      BEGIN CASE
         CASE message.type = ":"
            result = 1
            retMsg = FIELD(message, CHAR(13), 1)
         CASE message.type = "-"
            result = 0
            retMsg = message
         CASE 1
            result = 0
      END CASE
   END

RETURN
