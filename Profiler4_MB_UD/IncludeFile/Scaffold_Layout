* Scaffold_Layout
******************************************************************************
*
*     Equates for Scaffold File
*
*     Module %M%    Version  %I%   Date  %H%
*
*	IBM Confidential
*	OCO Source Materials
*	Copyright (C) IBM Corp.  2005
*
*     (c) Copyright 2005 IBM Corp. - All Rights Reserved
*     This is unpublished proprietary source code of IBM Corp.
*     The copyright notice above does not evidence any actual or intended
*     publication of such source code.
*
*******************************************************************************
*
*     Maintenence log - insert most recent change descriptions at top
*
*     Date.... ECase WHO Description........................................
*     02/02/05       MAB Created Module
*
*******************************************************************************


equ SCAFFOLD_DESCRIPTION               to 1
equ SCAFFOLD_SUMMARY                   to 2
equ SCAFFOLD_INITIAL_ITERATIONS        to 3
equ SCAFFOLD_DEDUCT_TEST               to 4
equ SCAFFOLD_DEDUCT_TEST_QUANTITY      to 5
equ SCAFFOLD_TEST_ROUTINE              to 6
equ SCAFFOLD_SECTION_2_DUP_FACTOR      to 7
equ SCAFFOLD_SCALE_TEST                to 8
equ SCAFFOLD_DIVIDE_BY                 to 9
equ SCAFFOLD_PLATFORM                  to 10
equ SCAFFOLD_SAMPLES                   to 11
equ SCAFFOLD_CODE_SECTION              to 15

* The calculation for the Time value of the test is

* MeanCPU = average(TestTime/TestIterations)
* MeanIterations = average(TestIterations)

* ForNextTime = TimePerForNext*MeanIterations
* RawTimePerForNext = MeanCPU - ForNextTime

* BaseTimePerIteration = RawTimePerForNext / RepetitionCount / DivideBy

* DeductTime = sum ( TimePerDeductTestId * DeductTestQuantity )

* TestTime = BaseTimePerIteration - DeductTime

* Scaffold Description
* ======== ===========
* <1>   English description of test
* <2>   Basic summary of test
*       Initialization code '|' Inner loop code
* <3>   Initial iteration count for scaling measurements and exactly
*       how many to run if SCAFFOLD_SCALE_TEST is "N"
* <4,n> DeductTest number
* <5,n> DeductTestQuantity
*       How many of DeductTest number <4,n> to deduct for each count of
*       the outside FOR/NEXT loop.  So if a test has a duplication
*       factor of 10, and each piece of the duplicated loop exercises
*       test 5, then we need to deduct 10 values of test 5.
*       We calculate the value of one iteration of this test.  

* <6>   Is this a built test, or a routine to be written exactly (from 15)
*       R - Not a built test.  Section 1 code is the whole routine
*           If there is no section 2 code (i.e. no ':' in column one
*           of the SCAFFOLD_CODE_SECTION section, then the routine
*           will write directly anyway.
*           This could be used for the name of the generated routine.
*       T - A built test with up to four sections delimited by lines = ":"
*       blank - default value for T?
* <7>   BP/BUILDER duplication factor for section 2 code.
*       There may be 10 copies of loop code like A = 1;
*       This gives more accuracy to measuring the test rather than
*       the loop control
* <8>   Scale this test?
*       There may be some tests we want to run just as a quick check.
*       Some systems exhibited the "Berkeley Fast File System Bug".  This
*       allows a quick check to see if 
*         N - Do not scale this test.
*         Y - Apply scaling to specified CPU seconds
*         blank - default value for "Y"?
*             
* <9>   Divide By:  Need to scale iteration count by this factor
*       This is beyond the duplication factory in field 7.
*       A test may have many GOTO, but we cannot duplicate labels,
*       so we cannot use the duplication control in field 7.
* <10>  Platform
*         blank - all
*         U     - UNIX
*         W     - Windows
* <11>  The number of samples to take.  This overrides the user supplied
*       values.  There may be a test that takes too long to set up or tear
*       down.
* <15> - <end> Scaffold
*        test sections, separated by ":"
*          section 1 - preamble before test
*          section 2 - inner loop goodies
*          section 3 - shutdown stuff (file closes et cetera)
*          section 4 - out-of-sequence code (gosub, includes)

* Since SCAFFOLD_SECTION_2_DUP_FACTOR means that we replicate the test n times
* in the inner loop, it lets us scale the test properly. 
* When n = 10, then after we back out the IterationCount of FOR/NEXT loops, 
* we need to DIVIDE_BY n so we know that the microseconds per iteration for
* the test under test is actually .1 of the reported value.
* We cannot just use SCAFFOLD_SECTION_2_DUP_FACTOR since a test like GOSUB 
* will have the 10 GOSUB coded in the loop with different variable names,
* but the DUP_FACTOR will only be 1.  We cannot duplicate variable names for 
* the label names for the gosub.
